<style type="text/css">
  .resource{
    margin-bottom: auto;
  }

  .error{
    padding-bottom: 10px;
  }

  .overflowhidden{
    overflow:hidden;
  }
  
  .checkbox-list{
    margin-bottom: 20px;
  }
  .checkbox-list>div:first-child
  {
    margin-bottom: 0px;
  }

  .input-text{
    background-color: #17a2b8;
    color: #ffffff;
    padding: 3px 5px 3px 5px;
    box-sizing: border-box;
    border-right: 5px solid #ffffff;
  }
  .input-text span{
  }

  #resourceDataSubmit{
    background-color: #00EEEE;
    border-color: #00EEEE;
  }
</style>
<!-- 数据列表 -->
<div class="d-flex flex-column h-100">
  <table class="table table-hover resource">
      <thead class="thead-dark">
        <tr>
          <th>客户端Id</th>
          <th>认证类型</th>
          <th>客户端域</th>
          <th>登录重定向地址</th>
          <th>退出登录重定向地址</th>
          <th>允许离线共享</th>
          <th>操作</th>
        </tr>
      </thead>
      <tbody id="datadiv" data-element="dataElement" data-iP="true" data-iL="true">
        <tr data-element="dataElement" data-n="id" data-resourceId="{{Value}}">
          <td name="clientId" data-element="dataElement" data-n="clientId">{{Value}}</td>
          <td data-element="dataElement" data-n="allowedGrantTypesString">{{Value}}</td>
          <td data-element="dataElement" data-n="allowedScopesString">{{Value}}</td>
          <td data-element="dataElement" data-n="redirectUrisString">{{Value}}</td>
          <td data-element="dataElement" data-n="postLogoutRedirectUrisString">{{Value}}</td>
          <td data-element="dataElement" data-n="allowOfflineAccess">{{Value}}</td>
          <td>
            <button type="button" class="btn btn-info" data-toggle="modal" data-target="#resourceData" onclick="updateHandle(this)">修改</button>
            <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#deleteData" onclick="deleteHandle(this)">删除</button>
          </td>
        </tr>
      </tbody>
  </table>
  <div class="w-100 d-flex justify-content-between">
    <div>
      <ul class="pagination">
        <li id="resourcePre" class="page-item"><a class="page-link" href="#" onclick="preClick()">上一页</a></li>
        <li id="resourceNext" class="page-item"><a class="page-link" href="#" onclick="nextClick()">下一页</a></li>
      </ul>
    </div>
    <div class="">
      <button type="button" class="btn btn-success" data-toggle="modal" data-target="#resourceData" onclick="addHandle()">+添加数据</button>
    </div>
  </div>
</div>

<!-- 数据 -->
<div class="modal fade" id="resourceData">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
 
      <!-- 模态框头部 -->
      <div class="modal-header bg-info text-white">
        <h4 class="modal-title">客户端数据</h4>
        <button type="button" class="close" data-dismiss="modal">&times;</button>
      </div>
 
      <!-- 模态框主体 -->
      <div class="modal-body">
        <form id="resourceDataForm" data-element="dataElement" data-iP="true">
          <input id="resourceId" type="text" class="form-control" value="{{Value}}" data-element="dataElement" data-n="id" hidden="hidden">
          <div id="resourceDataError" class="text-danger error"></div>
          <div class="form-group">
            <label for="text">客户端Id</label>
            <input id="clientId" type="text" class="form-control" value="{{Value}}" data-element="dataElement" data-n="clientId">
          </div>

          <div class="form-group">
            <label for="text">密匙（如果无需修改，则不要填写值）</label>
            <input id="clientSecret" type="text" class="form-control" value="{{Value}}" data-element="dataElement" data-n="clientSecret">
          </div>
          <div class="checkbox-list">
            <div class="form-group">
              <label for="text">认证类型</label>
            </div>
            <div class="overflowhidden" data-element="dataElement" data-n="allowedGrantType" data-iL="true">
              <label class="radio-inline col-md-6">
                <input class="radio float-left" type="radio" name="allowedGrantType" value="{{Value}}" data-element="dataElement" data-p-n="allowedGrantType">
                <span class="float-left overflowhidden" data-element="dataElement" data-p-n="allowedGrantType">
                  &nbsp{{Value}}
                </span>
              </label>
            </div>
          </div>
          
          <div class="checkbox-list">
            <div class="form-group">
              <label for="text">身份资源域</label>
            </div>
            <div id="identityResourceScopes" class="overflowhidden" data-element="dataElement" data-n="identityResourceScopes" data-iL="true">
              <label class="col-md-4 float-left input-text">
                <input class="checkbox" type="checkbox" value="{{Value}}" data-element="dataElement" data-p-n="identityResourceScopes" >
                <span class="" data-element="dataElement" data-p-n="identityResourceScopes">
                  {{Value}}
                </span>
                </input>
              </label>
            </div>
          </div>
          
          <div class="checkbox-list">
            <div class="form-group">
              <label for="text">Api资源域</label>
            </div>
            <div id="apiResourceScopes" class="overflowhidden" data-element="dataElement" data-n="apiResourceScopes" data-iL="true">
              <label class="col-md-4 float-left input-text">
                <input class="checkbox" type="checkbox" value="{{Value}}" data-element="dataElement" data-p-n="apiResourceScopes" >
                <span class="" data-element="dataElement" data-p-n="apiResourceScopes">
                  {{Value}}
                </span>
                </input>
              </label>
            </div>
          </div>
          

          <div class="form-group">
            <label for="text">登录重定向地址</label>
            <input id="redirectUri" type="text" class="form-control" value="{{Value}}" data-element="dataElement" data-n="redirectUri">
          </div>
          <div class="form-group">
            <label for="text">登出重定向地址</label>
            <input id="postLogoutRedirectUri" type="text" class="form-control" value="{{Value}}" data-element="dataElement" data-n="postLogoutRedirectUri">
          </div>
          <div class="form-group">
            <label for="text">允许离线共享</label>
            <div>
              <label class="radio-inline">
                <input class="radio float-left" type="radio" name="allowOfflineAccess" value="true">
                <span class="float-left">
                  &nbsp是
                </span>
              </label>
              &nbsp&nbsp&nbsp&nbsp&nbsp
              <label class="radio-inline">
                <input class="radio float-left" type="radio" name="allowOfflineAccess" value="false">
                <span class="float-left">&nbsp否</span>
              </label>
            </div>
          </div>
        </form>
      </div>
 
      <!-- 模态框底部 -->
      <div class="modal-footer bg-info">
        <button id="resourceDataSubmit" type="button" class="btn btn-primary" onclick="resourceDataSubmitHandle()">提交</button>
        <button id="resourceDataClose" type="button" class="btn btn-secondary" data-dismiss="modal">关闭</button>
      </div>
 
    </div>
  </div>
</div>

<!-- 删除确认框 -->
<div class="modal fade" id="deleteData">
  <div class="modal-dialog">
    <div class="modal-content">
 
      <!-- 模态框头部 -->
      <div class="modal-header">
        <h4 class="modal-title">确认删除？</h4>
        <button type="button" class="close" data-dismiss="modal">&times;</button>
      </div>
 
      <!-- 模态框主体 -->
      <div class="modal-body">
        <div id="deleteDataError" class="text-danger error"></div>
        你正在删除[<span id="deleteClientId"></span>]
      </div>
 
      <!-- 模态框底部 -->
      <div class="modal-footer">
        <button id="deleteDataDelete" data-resourceId="" type="button" class="btn btn-danger" onclick="deleteResourceData()">删除</button>
        <button id="deleteDataClose" type="button" class="btn btn-secondary" data-dismiss="modal">关闭</button>
      </div>
 
    </div>
  </div>
</div>

<script src="~/js/Other/selectSingleData.js"></script>
<script>
  // 当前页索引
  var curPageIndex = 1;
  // 页大小
  var pageSize = 10;
  // selectSingleData，resourceDataListFactoryId
  var resourceDataListFactoryId = null;
  // selectSingleData，resourceDataFactoryId
  var resourceDataFactoryId = null;
  // 认证类型
  var grantTypes = new Array();
  // 身份资源
  var identityResources = new Array();
  // Api资源
  var apiResources = new Array();
  // 资源数据列表
  var resourceDataList = null;

  // 没有下一页处理
  function notNextHandle(){
    $("#resourceNext").addClass("disabled");
  }

  // 有下一页处理
  function haveNextHandle(){
    $("#resourceNext").removeClass("disabled");
  }

  // 没有上一页处理
  function notNPreHandle()
  {
    $("#resourcePre").addClass("disabled");
  }

  // 有上一页处理
  function havePreHandle(){
    $("#resourcePre").removeClass("disabled");
  }

  // 上一页
  function preClick(){
    curPageIndex = curPageIndex - 1;
    GetResource();
  }

  // 下一页
  function nextClick(){
    curPageIndex = curPageIndex + 1;
    GetResource();
  }

  // 生成资源数据 For Html
  function createResourceData()
  {
    let allowedScopes = new Array();
    let identityResourceScopeHtmls = $("#identityResourceScopes").find("input");
    for(var n = 0; n < identityResourceScopeHtmls.length; n++){
      var htmlinput = identityResourceScopeHtmls.eq(n);
      if(htmlinput.is(':checked'))
      {
        allowedScopes.push(htmlinput.val());
      }
    }

    let apiResourceScopeHtmls = $("#apiResourceScopes").find("input");
    for(var n = 0; n < apiResourceScopeHtmls.length; n++){
      var htmlinput = apiResourceScopeHtmls.eq(n);
      if(htmlinput.is(':checked'))
      {
        allowedScopes.push(htmlinput.val());
      }
    }

    var data = {
      Id: $("#resourceId").val(),
      ClientId: $("#clientId").val(),
      ClientSecret: $("#clientSecret").val(),
      RedirectUri: $("#redirectUri").val(),
      PostLogoutRedirectUri: $("#postLogoutRedirectUri").val(),
      AllowedGrantType:$("input[name=allowedGrantType]:checked").val(),
      AllowedScopes:allowedScopes,
      AllowOfflineAccess: $("input[name=allowOfflineAccess]:checked").val(),
    }

    return data;
  }

  // 生成资源数据HTML For 数据
  function createResourceDataHtml(data)
  {
    ReloadData(data, null, resourceDataFactoryId);
  }

  // 获取资源回调
  function GetResourceCall(data){
    if(data.isSuccess == true){
      let resources = data.value.clients;

      for(let item in resources){
        let allowedGrantTypesString = "";
        for(let childItem in resources[item].allowedGrantTypes){
          allowedGrantTypesString = allowedGrantTypesString + "[" + resources[item].allowedGrantTypes[childItem].grantType + "]" + " ";
        }
        resources[item].allowedGrantTypesString = allowedGrantTypesString;

        let redirectUrisString = "";
        for(let childItem in resources[item].redirectUris){
          redirectUrisString = redirectUrisString + "[" + resources[item].redirectUris[childItem].redirectUri + "]" + " ";
        }
        resources[item].redirectUrisString = redirectUrisString;

        let postLogoutRedirectUrisString = "";
        for(let childItem in resources[item].postLogoutRedirectUris){
          postLogoutRedirectUrisString = postLogoutRedirectUrisString + "[" + resources[item].postLogoutRedirectUris[childItem].postLogoutRedirectUri + "]" + " ";
        }
        resources[item].postLogoutRedirectUrisString = postLogoutRedirectUrisString;

        let allowedScopesString = "";
        for(let childItem in resources[item].allowedScopes){
          allowedScopesString = allowedScopesString + "[" + resources[item].allowedScopes[childItem].scope + "]" + " ";
        }
        resources[item].allowedScopesString = allowedScopesString;
      }

      resourceDataList = resources;

      ReloadData(resources, null, resourceDataListFactoryId);

      if(resources.length < pageSize){
        notNextHandle();
      }
      else{
        haveNextHandle();
      }

      if(curPageIndex > 1){
        havePreHandle();
      }
      else{
        notNPreHandle();
      }
    }
  }

  // 获取资源
  function GetResource()
  {
    var postdata = {
      pageIndex: curPageIndex,
      pageSize: pageSize,
    };
    $.ajax({
      url:"/api/ClientManage/GetClients",
      type:"post",
      contentType: "application/json",
      data: JSON.stringify(postdata),
      dataType: 'json',
      success: GetResourceCall,
    });
  }

  // 添加资源数据回调
  function addResourceDataCall(data){
    if(data.isSuccess == true){
      $("#resourceDataClose").click();
      GetResource();
    }
    else{
      $("#resourceDataError").text(data.message);
      setTimeout('$("#resourceDataError").html("")',3000);
    }
  }

  // 添加资源数据
  function addResourceData(){
    var postdata = createResourceData();

    $.ajax({
      url:"/api/ClientManage/AddClient",
      type:"post",
      contentType: "application/json",
      data: JSON.stringify(postdata),
      dataType: 'json',
      success: addResourceDataCall,
      
    });
  }

  // 添加按钮处理
  function addHandle(){
    // 空的资源数据
    var nullResourceData = {
      id:"",
      clientId:"",
      allowedGrantType: grantTypes,
      identityResourceScopes: identityResources,
      apiResourceScopes: apiResources,
      redirectUri:"",
      postLogoutRedirectUri:"",
      allowOfflineAccess:"",
    };
    createResourceDataHtml(nullResourceData);
  }

  // 删除身份资源回调
  function deleteResourceDataCall(data){
    if(data.isSuccess == true){
      $("#deleteDataClose").click();
      GetResource();
    }
    else{
      $("#deleteDataError").text(data.message);
      setTimeout('$("#deleteDataError").html("")',3000);
    }
  }

  // 删除数据资源
  function deleteResourceData()
  {
    var id = $("#deleteDataDelete").attr("data-resourceId");

    var postdata = {
      Id: id,
    }

    $.ajax({
      url:"/api/ClientManage/RemoveClient",
      type:"post",
      contentType: "application/json",
      data: JSON.stringify(postdata),
      dataType: 'json',
      success: deleteResourceDataCall,
    });
  }

  // 删除按钮处理
  function deleteHandle(curele){
    var id = $(curele).parents("tr").attr("data-resourceId");
    var clientId = $(curele).parents("tr").find("[name=clientId]").text();
    $("#deleteClientId").text(clientId);
    $("#deleteDataDelete").attr("data-resourceId", id);
  }

  // 更新资源数据回调
  function updateResourceDataCall(data){
    if(data.isSuccess == true){
      $("#resourceDataClose").click();
      GetResource();
    }
    else{
      $("#resourceDataError").text(data.message);
      setTimeout('$("#resourceDataError").html("")',3000);
    }
  }

  // 更新资源数据
  function updateResourceData(){
    var postdata = createResourceData();

    $.ajax({
      url:"/api/ClientManage/UpdateClient",
      type:"post",
      contentType: "application/json",
      data: JSON.stringify(postdata),
      dataType: 'json',
      success: updateResourceDataCall,
    });
  }

  // 更新（修改）按钮处理
  function updateHandle(curele)
  {
    var id = $(curele).parents("tr").attr("data-resourceId");
    var resourceData = null;
    for(var item in resourceDataList){
      if(resourceDataList[item].id == id){
        resourceData = resourceDataList[item];
      }
    }

    var newResourceData = jQuery.extend(true, {}, resourceData);
    newResourceData.allowedGrantType = grantTypes;
    newResourceData.identityResourceScopes = identityResources;
    newResourceData.apiResourceScopes = apiResources;
    newResourceData.redirectUri = resourceData.redirectUris[0].redirectUri;
    newResourceData.postLogoutRedirectUri = resourceData.postLogoutRedirectUris[0].postLogoutRedirectUri
    createResourceDataHtml(newResourceData);
  }

  // 资源数据提交处理
  function resourceDataSubmitHandle()
  {
    var postdata = createResourceData();
    if(postdata.Id == ""){
      addResourceData();
    }
    else{
      updateResourceData();
    }
  }

  // 初始化
  function init()
  {
    // 获取认证类型
    $.ajax({
      url:"/api/ClientManage/GetGrantTypes",
      type:"post",
      contentType: "application/json",
      data: JSON.stringify(""),
      dataType: 'json',
      success: function(data){
        if(data.isSuccess == true){
          grantTypes = data.value;
        }
      },
    });

    // 获取身份资源
    let identityPostdata = {
      pageIndex:1,
      pageSize:9999,
    };
    $.ajax({
      url:"/api/IdentityResourceManage/GetIdentityResources",
      type:"post",
      contentType: "application/json",
      data: JSON.stringify(identityPostdata),
      dataType: 'json',
      success: function(data){
        if(data.isSuccess == true){
          for(let item in data.value.identityResources){
            identityResources.push(data.value.identityResources[item].name);
          }
        }
      },
    });

    // 获取Api资源
    let apiPostdata = {
      pageIndex:1,
      pageSize:9999,
    };
    $.ajax({
      url:"/api/ApiResourceManage/GetApiResources",
      type:"post",
      contentType: "application/json",
      data: JSON.stringify(apiPostdata),
      dataType: 'json',
      success: function(data){
        if(data.isSuccess == true){
          for(let item in data.value.apiResources){
            apiResources.push(data.value.apiResources[item].name);
          }
        }
      },
    });
    
    resourceDataFactoryId = BuildData(null, $("#resourceDataForm"));

    GetResource();
    resourceDataListFactoryId = BuildData(null, $("#datadiv"));
  }

  $(function(){
    console.log(1);

    init();
  });
</script>